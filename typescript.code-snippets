{"imp":{"prefix":"imp","body":["import ${2:second} from '${1:first}';"],"description":"import Module from 'module","scope":"typescript,typescriptreact"},"crq":{"prefix":"crq","body":["const ${2:second} = require('${1:first}');"],"description":"const Module = require('Module')","scope":"typescript,typescriptreact"},"forLoop":{"prefix":"forLoop","body":["${1:first}.forEach(element => {","    ","});"],"description":"array.forEach(element => {})","scope":"typescript,typescriptreact"},"forOf":{"prefix":"forOf","body":["for (let ${2:second} of ${1:first}) {","    console.log(i)$0;"," }"],"description":"for(let item of list)","scope":"typescript,typescriptreact"},"forIn":{"prefix":"forIn","body":["for (let ${2:second} in ${1:first}) {","    console.log(i)$0;"," }"],"description":"for (let item in list)","scope":"typescript,typescriptreact"},"afc":{"prefix":"afc","body":["const ${1:first} = () =>{};"],"description":"const name = () => {}","scope":"typescript,typescriptreact"},"setTimeoutF":{"prefix":"setTimeoutF","body":["setTimeout(() => {","  ${2:second};","}, ${1:first});",""],"description":"setTimeout(()=>{})","scope":"typescript,typescriptreact"},"setIntervalF":{"prefix":"setIntervalF","body":["setTimeout(() => {","  ${2:second};","}, ${1:first});",""],"description":"setInterval(()=>{,time})","scope":"typescript,typescriptreact"},"fetchFunction":{"prefix":"fetchFunction","body":["const ${1:first} = async () => {","  const fetchResult = await fetch(${2:second}, {});","  if (fetchResult.ok) {","    const result = await fetchResult.json;","    return result;","  }","};",""],"description":"const name = async () => {\n    const fetchResult = await fetch(\"URL\", {});\n    if (fetchResult.ok) {\n      const result = await fetchResult.json;\n      return result;\n    }\n  };\n  ","scope":"typescript,typescriptreact"},"fetchTryCatch":{"prefix":"fetchTryCatch","body":["try {","  const fetchResult = await fetch(${2:second}, {});","  const result = await fetchResult.json;","  return result;","} catch (error) {","  console.error(error);","}",""],"description":"try {\n    const fetchResult = await fetch('URL', {});\n    const result = await fetchResult.json;\n    return result;\n  } catch (error) {\n    console.error(error);\n  }\n  ","scope":"typescript,typescriptreact"},"logWF":{"prefix":"logWF","body":["console.log(${1:${TM_FILENAME_BASE}},$0);"],"description":"console.log(FILENAME,value)","scope":"typescript,typescriptreact"},"clog":{"prefix":"clog","body":["console.log($0);"],"description":"Console Log","scope":"typescript,typescriptreact"},"method":{"prefix":"method","body":["${1|filter,sort,map,find,findIndx,some,reduce,every|}((item) => {","  $0","   return item;","});"],"description":"arrary.filter|sort|map|find|findIndx|some|reduce|every","scope":"typescript,typescriptreact"}}